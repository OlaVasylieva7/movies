(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function r(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(e){if(e.ep)return;e.ep=!0;const o=r(e);fetch(e.href,o)}})();const a=document.getElementById("all-button"),d=document.getElementById("movies__container");a.addEventListener("click",u);const l="http://localhost:3000";async function m(){const t=await fetch(`${l}/movies`);if(!t.ok)throw new Error("failed to fetch");return await t.json()}async function u(){try{const t=await m();f(t)}catch{console.error("failed to render")}}function f(t){const n=t.map(({img:r,title:s,genre:e,year:o,id:i})=>` <li class="movies__item">
  <div>
    <img class="movies__image" src="${r}" alt="#"  onerror="this.src='https://via.placeholder.com/150';" />
    <h2 class="movies__title"><b>Title: </b>${s}</h2>
    <p class="movies__genre"><b>Genre: </b>${e}</p>
    <p class="movies__year"><b>Year: </b>${o}</p>
  </div>
  <div>
      <button class="movies__item-btn" type="button" id="edit">edit</button>
      <button class="movies__item-btn" type="button" id="${i}">delete</button>
  </div>
</li>`).join("");d.insertAdjacentHTML("beforeend",n)}const p="http://localhost:3000",h=document.getElementById("form");h.addEventListener("submit",y);function v(t){const n={method:"POST",body:JSON.stringify(t),headers:{"Content-Type":"application/json; charset=UTF-8"}};return fetch(`${p}/movies`,n).then(r=>{if(!r.ok)throw new Error("failed to post");return r.json()})}function y(t){t.preventDefault();const n=new FormData(t.currentTarget),r={};n.forEach((s,e)=>{r[e]=s}),v(r).then(()=>{allert("movie added")}).catch(s=>{console.error("failed to add")})}const b="http://localhost:3000",g={genre:"Comedy",year:1990};function _(t,n){const r={method:"PATCH",body:JSON.stringify(t),headers:{"Content-Type":"application/json; charset=UTF-8"}};return fetch(`${b}/movies/${n}`,r).then(s=>s.json())}_(g,3);const E=document.getElementById("add-button"),L=document.getElementById("close-modal-btn"),B=document.getElementById("modal");E.addEventListener("click",c);L.addEventListener("click",c);function c(){B.classList.toggle("is-hidden")}
//# sourceMappingURL=index.js.map
